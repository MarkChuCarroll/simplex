=================================
recursive function definition
=================================
fun fact(n: Int): Int {
  if (n == 0) {
    1
  } else {
    n * fact(n-1)
  }
}

produce("it") {
  fact(5)
}
------
 (source_file
      (definition
        (funDef
          (id)
          (params
            (param
              (id)
              (simpleType
                (id))))
          (simpleType
            (id))
          (cond
            (condClause
              (compare
                (ref
                  (id))
                (compOp)
                (litInt))
              (litInt))
            (multiply
              (ref
                (id))
              (multOp)
              (funCall
                (ref
                  (id))
                (exprs
                  (add
                    (ref
                      (id))
                    (addOp)
                    (litInt))))))))
      (product
        (litStr)
        (funCall
          (ref
            (id))
          (exprs
            (litInt)))))

=================================
function call with method call
=================================
fun use_meth(x: Int): Float {
   x->f()
}

meth Int->f(): Float {
   self->float()
}

produce("result") {
   print([3->f(), use_meth(4)])
}
------
    (source_file
      (definition
        (funDef
          (id)
          (params
            (param
              (id)
              (simpleType
                (id))))
          (simpleType
            (id))
          (methodCall
            (ref
              (id))
            (id))))
      (definition
        (methDef
          (simpleType
            (id))
          (id)
          (simpleType
            (id))
          (methodCall
            (ref
              (id))
            (id))))
      (product
        (litStr)
        (funCall
          (ref
            (id))
          (exprs
            (array
              (exprs
                (methodCall
                  (litInt)
                  (id))
                (funCall
                  (ref
                    (id))
                  (exprs
                    (litInt)))))))))

