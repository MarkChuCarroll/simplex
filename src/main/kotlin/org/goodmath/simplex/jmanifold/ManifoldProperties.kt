/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.goodmath.simplex.jmanifold

class ManifoldProperties(@Transient var swigCPtr: Long, @Transient var swigCMemOwn: Boolean) {
    constructor(): this(JManifoldJNI.new_ManifoldProperties(), true)


    companion object {
        fun getCPtr(obj: ManifoldProperties?): Long {
            return obj?.swigCPtr ?: 0
        }

        fun swigRelease(obj: ManifoldProperties?): Long {
            var ptr: Long = 0
            if (obj != null) {
                if (!obj.swigCMemOwn) {
                    throw RuntimeException("Cannot release ownership as memory is not owned")
                }
                ptr = obj.swigCPtr
                obj.swigCMemOwn = false
                obj.delete()
            }
            return ptr
        }
    }

    @Suppress("removal")
    protected fun finalize() {
        delete()
    }

  @Synchronized fun delete() {
      if (swigCPtr != 0L) {
          if (swigCMemOwn) {
              swigCMemOwn = false;
              JManifoldJNI.delete_ManifoldProperties(swigCPtr);
          }
          swigCPtr = 0;
      }
  }

  fun setSurface_area(value: Float) {
    JManifoldJNI.ManifoldProperties_surface_area_set(swigCPtr, this, value);
  }

fun getSurface_area(): Float {
    return JManifoldJNI.ManifoldProperties_surface_area_get(swigCPtr, this);
  }

  fun setVolume(value: Float) {
    JManifoldJNI.ManifoldProperties_volume_set(swigCPtr, this, value);
  }

  fun getVolume(): Float {
    return JManifoldJNI.ManifoldProperties_volume_get(swigCPtr, this);
  }


}
