/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.goodmath.simplex.jmanifold

class ManifoldJoinType(var swigName: String, val swigValue: Int ) {

    constructor(swigName: String): this(swigName, swigNext++)

    constructor (swigName: String, swigEnum: ManifoldJoinType): this(swigName, swigEnum.swigValue) {
        swigNext = this.swigValue+1
    }

    override fun toString(): String {
        return swigName;
    }

    companion object {
        val MANIFOLD_JOIN_TYPE_SQUARE = ManifoldJoinType ("MANIFOLD_JOIN_TYPE_SQUARE")
        val MANIFOLD_JOIN_TYPE_ROUND = ManifoldJoinType ("MANIFOLD_JOIN_TYPE_ROUND")
        val MANIFOLD_JOIN_TYPE_MITER = ManifoldJoinType ("MANIFOLD_JOIN_TYPE_MITER")
        val swigValues: List<ManifoldJoinType> =
            listOf(MANIFOLD_JOIN_TYPE_SQUARE, MANIFOLD_JOIN_TYPE_ROUND, MANIFOLD_JOIN_TYPE_MITER)

        fun swigToEnum(swigValue: Int): ManifoldJoinType {
            if (swigValue < swigValues.size && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue) {
                return swigValues[swigValue]
            }
            for (i in 0..<swigValues.size) {
                if (swigValues[i].swigValue == swigValue) {
                    return swigValues[i]
                }
            }
            throw IllegalArgumentException("No enum ManifoldJoinType with value $swigValue")
        }

        var swigNext: Int = 0
    }
}

